spring.application.name=cqrs-es

spring.datasource.url=jdbc:mysql://localhost:3306/cqrses?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=Meanhvabin19*
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
server.port=8080
spring.datasource.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=true
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.integration.jdbc.schema=classpath:/org/springframework/integration/jdbc/schema-mysql.sql
#spring.flyway.enabled=false

#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect
#spring.main.allow-circular-references=true

spring.output.ansi.enabled=ALWAYS

spring.kafka.bootstrap-servers=172.24.236.211:9092
#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.bootstrap-servers=172.18.0.1:9092
spring.kafka.consumer.group-id=order_group, payment_group, product_group, customer_group
spring.kafka.consumer.auto-offset-reset= earliest
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.producer.retries= 3
spring.kafka.producer.delivery-timeout-ms= 10000
spring.kafka.producer.retry-backoff-ms= 1000

spring.kafka.consumer.enable-auto-commit=false
spring.kafka.listener.ack-mode=manual
spring.kafka.listener.concurrency=3

spring.main.allow-bean-definition-overriding=true

#server.servlet.context-path=/api
#springdoc.swagger-ui.path=/swagger-ui.html
#springdoc.api-docs.path=/v3/api-docs

logging.level.org.springframework.integration=DEBUG
logging.level.org.springframework.context=DEBUG

logging.level.org.springframework.http.converter.json=DEBUG

axon.commandhandling.default-command-timeout=5000

management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
# This exposes the metrics at the /actuator/prometheus endpoint.

# Grafana
# username= admin
# password = admin

#axon.axonserver.commit-timeout=10000
#axon.axonserver.command-threads=10
#axon.server.addresses=localhost:8124
#axon.server.context=default

# DEBUG axon server
#logging.level.org.axonframework=DEBUG
#logging.level.io.axoniq=DEBUG

#axoniq.axonserver.autocluster.first=axonserver-1
#axoniq.axonserver.autocluster.contexts=_admin,default
# We highly recommend protecting your installations at all time, hence why access control is enabled here.
# For quick testing, you can disable this, but be sure to switch it big with high priority.
#axoniq.axonserver.accesscontrol.enabled=true
#axoniq.axonserver.accesscontrol.internal-token=${generated_token}
#axoniq.axonserver.accesscontrol.systemtokenfile=/axonserver/config/axonserver.tok
#axoniq.axonserver.enterprise.licenseDirectory=true
#
#logging.level.org.apache.kafka=DEBUG
#logging.level.org.springframework.kafka=DEBUG
