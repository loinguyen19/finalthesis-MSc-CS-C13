version: '3.3'
services:
  axonserver-1:
    image: axoniq/axonserver:2023.1.0-jdk-17-dev
    hostname: axonserver-1
    volumes:
      - axonserver-data:/axonserver/data
      - axonserver-events:/axonserver/events
      - axonserver-log:/axonserver/log
#      - ./axonserver.properties:/config/axonserver.properties
    ports:
      - '8024:8024'
      - '8124:8124'
      - '8224:8224'
    networks:
      - axon-demo

#  db:
#    image: mysql:8.0.40-oracle
#    container_name: mysql-cqrses-api
#    ports:
#      - '3306:3306'
#      - '3308:3308'
#    environment:
#      MYSQL_apoc_export_file_enabled: true
#      MYSQL_apoc_import_file_enabled: true
#      MYSQL_apoc_import_file_use__mysql__config: true
#      MYSQL_PLUGINS: '["apoc"]'
#      MYSQL_AUTH: none
#    healthcheck:
#      test:
#        [
#          "CMD-SHELL", "if [ $$(mysql status | grep -o \"is running\" | wc -l ) -eq 0 ]; then exit 1; fi"
#        ]
#      retries: 5
#      interval: '5s'
#
#  provision:
#    depends_on:
#      db:
#        condition: service_healthy
#    build:
#      context: .
#      dockerfile: Dockerfile.provision
#    environment:
#      DB_URI: mysql://db:8080
#
#  api:
#    depends_on:
#      db:
#        condition: service_healthy
#
#    build:
#      context: .
#      dockerfile: Dockerfile.local
#    container_name: cqrs-api
#    ports:
#      - "9000:9000"
#    environment:
#      USE_DB: true
#      PORT: 9000
#      HOST_URL: http://localhost:9000
#      DB_URI: mysql://db:8080
#
#  dbui:
#    image: mysql:8.0.40-oracle
#    ports:
#      - '13306:13306'
#    environment:
#      MYSQL_apoc_export_file_enabled: true
#      MYSQL_apoc_import_file_enabled: true
#      MYSQL_apoc_import_file_use__mysql__config: true
#      MYSQL_PLUGINS: '["apoc"]'
#    healthcheck:
#      test:
#        [
#          "CMD-SHELL", "if [ $$(mysql status | grep -o \"is running\" | wc -l ) -eq 0 ]; then exit 1; fi"
#        ]
#      retries: 5
#      interval: '5s'

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - kafka-net

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://172.24.236.211:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "order_group, payment_group, product_group"
    volumes:
      - ./Kafka:/confluentinc/kafka
    networks:
        - kafka-net

volumes:
  axonserver-data:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/data
      o: bind
  axonserver-events:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/events
      o: bind
  axonserver-log:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/log
      o: bind
  ./Kafka:
    driver: local
    driver_opts:
      type: none
      device: /confluentinc/kafka
      o: bind

networks:
  axon-demo:
  kafka-net:
    driver: bridge


